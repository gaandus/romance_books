version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/romance_books
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=romance_books
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - app-network

  init-db:
    build:
      context: .
      dockerfile: docker/Dockerfile.init-db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/romance_books
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - init-db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: