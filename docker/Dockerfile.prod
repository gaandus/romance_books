# Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Install jq for JSON validation
RUN apk add --no-cache jq

# First, copy only the files needed for npm install
COPY package*.json ./
COPY .npmrc ./
COPY prisma ./prisma/

# Install dependencies
RUN npm install --no-cache && \
    npm install --no-cache --save-exact \
    postcss@8.4.35 \
    autoprefixer@10.4.17 \
    tailwindcss@3.3.0 \
    tr46@4.1.1 \
    whatwg-url@14.0.0 \
    reusify@1.0.4 \
    node-fetch@2.7.0

# Install development dependencies
RUN npm install --no-cache --save-exact \
    rimraf@latest \
    glob@latest \
    eslint@latest \
    @typescript-eslint/parser@latest \
    @typescript-eslint/eslint-plugin@latest \
    lru-cache@latest

# Install OpenAI with specific version
RUN npm install --no-cache --save-exact openai@4.28.0

# Now copy the rest of the application
COPY . .

# Verify all files are copied correctly
RUN echo "=== Verifying file structure ===" && \
    echo "\nRoot directory:" && \
    ls -la && \
    echo "\nApp directory:" && \
    ls -la app && \
    echo "\nNode modules:" && \
    ls -la node_modules && \
    echo "\nPrisma directory:" && \
    ls -la prisma && \
    echo "\nScripts directory:" && \
    ls -la scripts && \
    echo "\nData directory:" && \
    ls -la data

# Create public directory if it doesn't exist
RUN mkdir -p public

# Generate Prisma client
RUN npx prisma generate

# Make init-db.sh executable
RUN chmod +x scripts/init-db.sh

# Clean up
RUN rm -rf .next
RUN rm -rf node_modules/.cache

# Build the application
RUN npm run build

# Runner stage
FROM node:20-alpine AS runner

# Set working directory
WORKDIR /app

# Copy everything from builder
COPY --from=builder /app .

# Verify files in runner stage
RUN echo "=== Verifying files in runner stage ===" && \
    echo "\nRoot directory:" && \
    ls -la && \
    echo "\nApp directory:" && \
    ls -la app && \
    echo "\nNode modules:" && \
    ls -la node_modules && \
    echo "\nPrisma directory:" && \
    ls -la prisma && \
    echo "\nScripts directory:" && \
    ls -la scripts && \
    echo "\nData directory:" && \
    ls -la data

# Make init-db.sh executable
RUN chmod +x scripts/init-db.sh

# Expose port
EXPOSE 3000

# Start the application
CMD ["npm", "start"]