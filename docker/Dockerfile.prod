# Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Install jq for JSON validation
RUN apk add --no-cache jq

# Copy package files first
COPY package*.json ./
COPY .npmrc ./

# Verify package files are copied correctly
RUN echo "=== Verifying package files ===" && \
    echo "\nPackage.json content:" && \
    cat package.json && \
    echo "\nPackage-lock.json exists:" && \
    ls -la package-lock.json || echo "No package-lock.json found"

# Copy prisma schema
COPY prisma ./prisma/

# Install dependencies
RUN npm install --no-cache

# Copy the rest of the application
COPY . .

# Verify all files are copied correctly
RUN echo "=== Verifying file structure ===" && \
    echo "\nRoot directory:" && \
    ls -la && \
    echo "\nApp directory:" && \
    ls -la app && \
    echo "\nNode modules:" && \
    ls -la node_modules && \
    echo "\nPrisma directory:" && \
    ls -la prisma && \
    echo "\nScripts directory:" && \
    ls -la scripts && \
    echo "\nData directory:" && \
    ls -la data

# Create public directory if it doesn't exist
RUN mkdir -p public

# Generate Prisma client
RUN npx prisma generate

# Make init-db.sh executable
RUN chmod +x scripts/init-db.sh

# Clean up
RUN rm -rf .next
RUN rm -rf node_modules/.cache

# Build the application
RUN npm run build

# Runner stage
FROM node:20-alpine AS runner

# Set working directory
WORKDIR /app

# Copy everything from builder
COPY --from=builder /app .

# Verify files in runner stage
RUN echo "=== Verifying files in runner stage ===" && \
    echo "\nRoot directory:" && \
    ls -la && \
    echo "\nApp directory:" && \
    ls -la app && \
    echo "\nNode modules:" && \
    ls -la node_modules && \
    echo "\nPrisma directory:" && \
    ls -la prisma && \
    echo "\nScripts directory:" && \
    ls -la scripts && \
    echo "\nData directory:" && \
    ls -la data

# Make init-db.sh executable
RUN chmod +x scripts/init-db.sh

# Expose port
EXPOSE 3000

# Start the application
CMD ["npm", "start"]